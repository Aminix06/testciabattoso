--==============================================================================
-- CONTROLLO SERVER VUOTO (Esecuzione Immediata e Continua)
--==============================================================================
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- 1. Controllo Immediato: Eseguito una sola volta all'avvio dello script.
if #Players:GetPlayers() > 1 then
    localPlayer:Kick("Kick: Il server non è vuoto. Lo script non può essere eseguito.")
    return -- Interrompe l'esecuzione di tutto lo script se il server non è vuoto.
end

-- 2. Controllo Continuo: Inizia a monitorare in background.
task.spawn(function()
    while task.wait() do -- task.wait() controlla ogni frame, il ritardo più basso possibile.
        if #Players:GetPlayers() > 1 then
            localPlayer:Kick("Kick: Un altro giocatore è entrato nel server.")
            break -- Esce dal loop dopo il kick.
        end
    end
end)

-- Il resto dello script verrà eseguito solo se il controllo iniziale ha successo.
--==============================================================================


local function CheckToGo()
	local player = game.Players.LocalPlayer
	local humanoidRootPart = player.Character:WaitForChild("HumanoidRootPart")
	local playerId = player.UserId
	local data = game:GetService("ReplicatedStorage").Datas
	local playerData = data:WaitForChild(tostring(playerId))
	local statsz = playerData:WaitForChild("Strength")
	local zeni = playerData:WaitForChild("Zeni")
	while true do
		if statsz.Value < 100000000 and game.PlaceId == 114014249462644 then
			local args = {
				[1] = "Earth"
			}
 
			game:GetService("ReplicatedStorage").Package.Events.TP:InvokeServer(unpack(args))
		end
		wait(.1)
	end
end
task.spawn(CheckToGo)
 
 
local firstspawn = true
 
local function startonskibidi()
	if firstspawn and game.PlaceId == 114014249462644 then
		print("Start")
		firstspawn = false
	else
		print("died")
	end
end
 
game.Players.LocalPlayer.CharacterAdded:Connect(startonskibidi)
 
 
local function StartTheGame()
    -- FIX: Attendi che la GUI 'Main' sia disponibile prima di interagire con essa.
    local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    local mainGui = playerGui:WaitForChild("Main", 10) -- Attendi fino a 10 secondi

    if not mainGui then
        warn("StartTheGame: GUI 'Main' non trovata. Impossibile continuare la funzione.")
        return
    end

	task.wait()
	local Event = game:GetService("ReplicatedStorage").Package.Events.Start
	Event:InvokeServer()
	task.wait()
 
	local Event = game:GetService("ReplicatedStorage").Package.Events.Start
	Event:InvokeServer()
 
	task.wait()
 
    local bruhButton = mainGui:FindFirstChild("bruh")
    if bruhButton then
	    bruhButton.Disabled = true
	    bruhButton.Disabled = false
    end
 
	task.wait()
	local Event = game:GetService("ReplicatedStorage").Package.Events.Start
	Event:InvokeServer()
end
 
StartTheGame()
 
wait(.5)
 
 
local Converted = {
	["_HealthAndEnergy"] = Instance.new("ScreenGui");
	["_Frame"] = Instance.new("Frame");
	["_UICorner"] = Instance.new("UICorner");
	["_UIStroke"] = Instance.new("UIStroke");
	["_UIGradient"] = Instance.new("UIGradient");
	["_TextLabel"] = Instance.new("TextLabel");
	["_UIStroke1"] = Instance.new("UIStroke");
	["_UIGradient1"] = Instance.new("UIGradient");
	["_health"] = Instance.new("TextLabel");
	["_UIStroke2"] = Instance.new("UIStroke");
	["_/"] = Instance.new("TextLabel");
	["_UIStroke3"] = Instance.new("UIStroke");
	["_maxhealth"] = Instance.new("TextLabel");
	["_UIStroke4"] = Instance.new("UIStroke");
	["_freim"] = Instance.new("Frame");
	["_UICorner1"] = Instance.new("UICorner");
	["_UIStroke5"] = Instance.new("UIStroke");
	["_Uigraddd"] = Instance.new("UIGradient");
	["_TextLabel1"] = Instance.new("TextLabel");
	["_UIStroke6"] = Instance.new("UIStroke");
	["_Uigrad"] = Instance.new("UIGradient");
	["_energy"] = Instance.new("TextLabel");
	["_UIStroke7"] = Instance.new("UIStroke");
	["_/1"] = Instance.new("TextLabel");
	["_UIStroke8"] = Instance.new("UIStroke");
	["_maxenergy"] = Instance.new("TextLabel");
	["_UIStroke9"] = Instance.new("UIStroke");
}
 
-- Properties:
 
Converted["_HealthAndEnergy"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Converted["_HealthAndEnergy"].Name = "HealthAndEnergy"
Converted["_HealthAndEnergy"].Parent = game:GetService("CoreGui")
 
Converted["_Frame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Frame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Frame"].BorderSizePixel = 0
Converted["_Frame"].Position = UDim2.new(0.316506416, 0, 0.00999999978, 0)
Converted["_Frame"].Size = UDim2.new(0.35921225, 0, 0.0540200993, 0)
Converted["_Frame"].Parent = Converted["_HealthAndEnergy"]
 
Converted["_UICorner"].CornerRadius = UDim.new(1, 0)
Converted["_UICorner"].Parent = Converted["_Frame"]
 
Converted["_UIStroke"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke"].Thickness = 4
Converted["_UIStroke"].Parent = Converted["_Frame"]
 
Converted["_UIGradient"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
	ColorSequenceKeypoint.new(0.055710308253765106, Color3.fromRGB(255, 85.23676782846451, 0)),
	ColorSequenceKeypoint.new(0.11142061650753021, Color3.fromRGB(255, 170.47353565692902, 0)),
	ColorSequenceKeypoint.new(0.16713091731071472, Color3.fromRGB(254.2897117137909, 255, 0)),
	ColorSequenceKeypoint.new(0.22284123301506042, Color3.fromRGB(169.05292868614197, 255, 0)),
	ColorSequenceKeypoint.new(0.27855151891708374, Color3.fromRGB(83.81617605686188, 255, 0)),
	ColorSequenceKeypoint.new(0.33426183462142944, Color3.fromRGB(0, 255, 1.420576572418213)),
	ColorSequenceKeypoint.new(0.38997215032577515, Color3.fromRGB(0, 255, 86.65735960006714)),
	ColorSequenceKeypoint.new(0.44568246603012085, Color3.fromRGB(0, 255, 171.89414262771606)),
	ColorSequenceKeypoint.new(0.5013927817344666, Color3.fromRGB(0, 252.869074344635, 255)),
	ColorSequenceKeypoint.new(0.5571030378341675, Color3.fromRGB(0, 167.63235211372375, 255)),
	ColorSequenceKeypoint.new(0.6128133535385132, Color3.fromRGB(0, 82.39556908607483, 255)),
	ColorSequenceKeypoint.new(0.6685236692428589, Color3.fromRGB(2.841153144836426, 0, 255)),
	ColorSequenceKeypoint.new(0.7242339849472046, Color3.fromRGB(88.07793617248535, 0, 255)),
	ColorSequenceKeypoint.new(0.7799443006515503, Color3.fromRGB(173.31471920013428, 0, 255)),
	ColorSequenceKeypoint.new(0.835654616355896, Color3.fromRGB(255, 0, 251.4484977722168)),
	ColorSequenceKeypoint.new(0.8913649320602417, Color3.fromRGB(255, 0, 166.21171474456787)),
	ColorSequenceKeypoint.new(0.9470751881599426, Color3.fromRGB(255, 0, 80.97493171691895)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
}
Converted["_UIGradient"].Parent = Converted["_UIStroke"]
 
Converted["_TextLabel"].Font = Enum.Font.FredokaOne
Converted["_TextLabel"].Text = "HEALTH:"
Converted["_TextLabel"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].TextScaled = true
Converted["_TextLabel"].TextSize = 14
Converted["_TextLabel"].TextWrapped = true
Converted["_TextLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].BackgroundTransparency = 1
Converted["_TextLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel"].BorderSizePixel = 0
Converted["_TextLabel"].Position = UDim2.new(0.0101300552, 0, -0.0192308798, 0)
Converted["_TextLabel"].Size = UDim2.new(0.20260115, 0, 1.00000024, 0)
Converted["_TextLabel"].Parent = Converted["_Frame"]
 
Converted["_UIStroke1"].Parent = Converted["_TextLabel"]
 
Converted["_UIGradient1"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(26.000000350177288, 255, 0)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(8.000000473111868, 76.0000030696392, 0))
}
Converted["_UIGradient1"].Offset = Vector2.new(0.10000000149011612, 0.10000000149011612)
Converted["_UIGradient1"].Rotation = 90
Converted["_UIGradient1"].Parent = Converted["_Frame"]
 
Converted["_health"].Font = Enum.Font.FredokaOne
Converted["_health"].Text = "nil"
Converted["_health"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_health"].TextScaled = true
Converted["_health"].TextSize = 14
Converted["_health"].TextWrapped = true
Converted["_health"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_health"].BackgroundTransparency = 1
Converted["_health"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_health"].BorderSizePixel = 0
Converted["_health"].Position = UDim2.new(0.234679773, 0, -0.0192308649, 0)
Converted["_health"].Size = UDim2.new(0.303816825, 0, 1.00000012, 0)
Converted["_health"].Name = "health"
Converted["_health"].Parent = Converted["_Frame"]
 
Converted["_UIStroke2"].Parent = Converted["_health"]
 
Converted["_/"].Font = Enum.Font.FredokaOne
Converted["_/"].Text = "/"
Converted["_/"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_/"].TextScaled = true
Converted["_/"].TextSize = 14
Converted["_/"].TextWrapped = true
Converted["_/"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_/"].BackgroundTransparency = 1
Converted["_/"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_/"].BorderSizePixel = 0
Converted["_/"].Position = UDim2.new(0.481177628, 0, -1.10039345e-07, 0)
Converted["_/"].Size = UDim2.new(0.188958243, 0, 1.00000024, 0)
Converted["_/"].Name = "/"
Converted["_/"].Parent = Converted["_Frame"]
 
Converted["_UIStroke3"].Parent = Converted["_/"]
 
Converted["_maxhealth"].Font = Enum.Font.FredokaOne
Converted["_maxhealth"].Text = "nil"
Converted["_maxhealth"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_maxhealth"].TextScaled = true
Converted["_maxhealth"].TextSize = 14
Converted["_maxhealth"].TextWrapped = true
Converted["_maxhealth"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_maxhealth"].BackgroundTransparency = 1
Converted["_maxhealth"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_maxhealth"].BorderSizePixel = 0
Converted["_maxhealth"].Position = UDim2.new(0.612817109, 0, -1.33070841e-07, 0)
Converted["_maxhealth"].Size = UDim2.new(0.387182951, 0, 1.00000024, 0)
Converted["_maxhealth"].Name = "maxhealth"
Converted["_maxhealth"].Parent = Converted["_Frame"]
 
Converted["_UIStroke4"].Parent = Converted["_maxhealth"]
 
Converted["_freim"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_freim"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_freim"].BorderSizePixel = 0
Converted["_freim"].Position = UDim2.new(0.316506416, 0, 0.075000003, 0)
Converted["_freim"].Size = UDim2.new(0.35921225, 0, 0.0540200993, 0)
Converted["_freim"].Name = "freim"
Converted["_freim"].Parent = Converted["_HealthAndEnergy"]
 
Converted["_UICorner1"].CornerRadius = UDim.new(1, 0)
Converted["_UICorner1"].Parent = Converted["_freim"]
 
Converted["_UIStroke5"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke5"].Thickness = 4
Converted["_UIStroke5"].Parent = Converted["_freim"]
 
Converted["_Uigraddd"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
	ColorSequenceKeypoint.new(0.055710308253765106, Color3.fromRGB(255, 85.23676782846451, 0)),
	ColorSequenceKeypoint.new(0.11142061650753021, Color3.fromRGB(255, 170.47353565692902, 0)),
	ColorSequenceKeypoint.new(0.16713091731071472, Color3.fromRGB(254.2897117137909, 255, 0)),
	ColorSequenceKeypoint.new(0.22284123301506042, Color3.fromRGB(169.05292868614197, 255, 0)),
	ColorSequenceKeypoint.new(0.27855151891708374, Color3.fromRGB(83.81617605686188, 255, 0)),
	ColorSequenceKeypoint.new(0.33426183462142944, Color3.fromRGB(0, 255, 1.420576572418213)),
	ColorSequenceKeypoint.new(0.38997215032577515, Color3.fromRGB(0, 255, 86.65735960006714)),
	ColorSequenceKeypoint.new(0.44568246603012085, Color3.fromRGB(0, 255, 171.89414262771606)),
	ColorSequenceKeypoint.new(0.5013927817344666, Color3.fromRGB(0, 252.869074344635, 255)),
	ColorSequenceKeypoint.new(0.5571030378341675, Color3.fromRGB(0, 167.63235211372375, 255)),
	ColorSequenceKeypoint.new(0.6128133535385132, Color3.fromRGB(0, 82.39556908607483, 255)),
	ColorSequenceKeypoint.new(0.6685236692428589, Color3.fromRGB(2.841153144836426, 0, 255)),
	ColorSequenceKeypoint.new(0.7242339849472046, Color3.fromRGB(88.07793617248535, 0, 255)),
	ColorSequenceKeypoint.new(0.7799443006515503, Color3.fromRGB(173.31471920013428, 0, 255)),
	ColorSequenceKeypoint.new(0.835654616355896, Color3.fromRGB(255, 0, 251.4484977722168)),
	ColorSequenceKeypoint.new(0.8913649320602417, Color3.fromRGB(255, 0, 166.21171474456787)),
	ColorSequenceKeypoint.new(0.9470751881599426, Color3.fromRGB(255, 0, 80.97493171691895)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
}
Converted["_Uigraddd"].Name = "Uigraddd"
Converted["_Uigraddd"].Parent = Converted["_UIStroke5"]
 
Converted["_TextLabel1"].Font = Enum.Font.FredokaOne
Converted["_TextLabel1"].Text = "ENERGY:"
Converted["_TextLabel1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel1"].TextScaled = true
Converted["_TextLabel1"].TextSize = 14
Converted["_TextLabel1"].TextWrapped = true
Converted["_TextLabel1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel1"].BackgroundTransparency = 1
Converted["_TextLabel1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel1"].BorderSizePixel = 0
Converted["_TextLabel1"].Position = UDim2.new(0.0101300552, 0, -0.0192308798, 0)
Converted["_TextLabel1"].Size = UDim2.new(0.20260115, 0, 1.00000024, 0)
Converted["_TextLabel1"].Parent = Converted["_freim"]
 
Converted["_UIStroke6"].Parent = Converted["_TextLabel1"]
 
Converted["_Uigrad"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 221.00000202655792, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 67.00000360608101, 57.00000040233135))
}
Converted["_Uigrad"].Offset = Vector2.new(0.10000000149011612, 0.10000000149011612)
Converted["_Uigrad"].Rotation = 90
Converted["_Uigrad"].Name = "Uigrad"
Converted["_Uigrad"].Parent = Converted["_freim"]
 
Converted["_energy"].Font = Enum.Font.FredokaOne
Converted["_energy"].Text = "nil"
Converted["_energy"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_energy"].TextScaled = true
Converted["_energy"].TextSize = 14
Converted["_energy"].TextWrapped = true
Converted["_energy"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_energy"].BackgroundTransparency = 1
Converted["_energy"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_energy"].BorderSizePixel = 0
Converted["_energy"].Position = UDim2.new(0.234679773, 0, -0.0192310419, 0)
Converted["_energy"].Size = UDim2.new(0.303816825, 0, 1.00000036, 0)
Converted["_energy"].Name = "energy"
Converted["_energy"].Parent = Converted["_freim"]
 
Converted["_UIStroke7"].Parent = Converted["_energy"]
 
Converted["_/1"].Font = Enum.Font.FredokaOne
Converted["_/1"].Text = "/"
Converted["_/1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_/1"].TextScaled = true
Converted["_/1"].TextSize = 14
Converted["_/1"].TextWrapped = true
Converted["_/1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_/1"].BackgroundTransparency = 1
Converted["_/1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_/1"].BorderSizePixel = 0
Converted["_/1"].Position = UDim2.new(0.481177628, 0, -1.10039345e-07, 0)
Converted["_energy"].Size = UDim2.new(0.188958243, 0, 1.00000024, 0)
Converted["_/1"].Name = "/"
Converted["_/1"].Parent = Converted["_freim"]
 
Converted["_UIStroke8"].Parent = Converted["_/1"]
 
Converted["_maxenergy"].Font = Enum.Font.FredokaOne
Converted["_maxenergy"].Text = "nil"
Converted["_maxenergy"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_maxenergy"].TextScaled = true
Converted["_maxenergy"].TextSize = 14
Converted["_maxenergy"].TextWrapped = true
Converted["_maxenergy"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_maxenergy"].BackgroundTransparency = 1
Converted["_maxenergy"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_maxenergy"].BorderSizePixel = 0
Converted["_maxenergy"].Position = UDim2.new(0.612817109, 0, -1.77427779e-07, 0)
Converted["_maxenergy"].Size = UDim2.new(0.387182951, 0, 1.00000024, 0)
Converted["_maxenergy"].Name = "maxenergy"
Converted["_maxenergy"].Parent = Converted["_freim"]
 
Converted["_UIStroke9"].Parent = Converted["_maxenergy"]
 
-- FIX: Attendi che la GUI del gioco sia pronta prima di modificarla.
-- Questo previene l'errore "Main is not a valid member of PlayerGui".
task.spawn(function()
    local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    local mainGui = playerGui:WaitForChild("Main", 15) -- Attendi fino a 15 secondi
    if mainGui then
        local mainFrame = mainGui:FindFirstChild("MainFrame")
        if mainFrame then
            local bars = mainFrame:FindFirstChild("Bars")
            if bars then
                bars.Visible = false
                print("Barre della GUI di default nascoste con successo.")
            end
        end
    else
        warn("Impossibile trovare la GUI 'Main' per nascondere le barre.")
    end
end)
 
-- Flag to control the loops
local running = true
 
-- Function to format numbers with suffixes
local function formatNumber(number)
	if number >= 1_000_000_000_000 then
		return string.format("%.1fT", number / 1_000_000_000_000)
	elseif number >= 1_000_000_000 then
		return string.format("%.1fB", number / 1_000_000_000)
	elseif number >= 1_000_000 then
		return string.format("%.1fM", number / 1_000_000)
	elseif number >= 1_000 then
		return string.format("%.1fK", number / 1_000)
	else
		return tostring(number)
	end
end
 
-- Function to update health in a loop
local function CambiareVitaNormal()
	while running do
		local character = game.Players.LocalPlayer.Character
		if character and character:FindFirstChild("Humanoid") then
			local humanoid = character.Humanoid
			Converted["_health"].Text = formatNumber(math.floor(humanoid.Health))
			Converted["_maxhealth"].Text = formatNumber(math.floor(humanoid.MaxHealth))
		end
		wait(0.1)
	end
end
 
-- Function to update energy in a loop
local function CambiareEnergyaNormale()
	while running do
		local player = game.Players.LocalPlayer
		local character = game.Workspace.Living:FindFirstChild(player.Name)
		if character and character:FindFirstChild("Stats") and character.Stats:FindFirstChild("Ki") then
			local ki = character.Stats.Ki
			Converted["_energy"].Text = formatNumber(math.floor(ki.Value))
			Converted["_maxenergy"].Text = formatNumber(math.floor(ki.MaxValue))
		end
		wait(0.1)
	end
end
 
local function setupCharacter(character)
	running = false
	wait(0.1)
 
	running = true 
	task.spawn(CambiareVitaNormal)
	task.spawn(CambiareEnergyaNormale)
end
 
-- Connect to the CharacterAdded event
game.Players.LocalPlayer.CharacterAdded:Connect(setupCharacter)
 
-- Handle character if already loaded
if game.Players.LocalPlayer.Character then
	setupCharacter(game.Players.LocalPlayer.Character)
end
 
game:GetService("RunService").RenderStepped:Connect(function()
	Converted["_UIGradient1"].Rotation += 2
	Converted["_UIGradient"].Rotation += 2
	Converted["_Uigrad"].Rotation += 2
	Converted["_Uigraddd"].Rotation += 2
end)
 
 
local function createGUI()
	-- Generated using RoadToGlory's Converter v1.1 (RoadToGlory#9879)
 
	-- Instances:
 
	local Converted = {
		["_AUTOFARM"] = Instance.new("ScreenGui");
		["_Frame"] = Instance.new("Frame");
		["_UICorner"] = Instance.new("UICorner");
		["_UIStroke"] = Instance.new("UIStroke");
		["_UIGradient"] = Instance.new("UIGradient");
		["_UIGradient1"] = Instance.new("UIGradient");
		["_LocalScript"] = Instance.new("LocalScript");
		["_ImageLabel"] = Instance.new("ImageLabel");
		["_UICorner1"] = Instance.new("UICorner");
		["_TextLabel"] = Instance.new("TextLabel");
		["_UIStroke1"] = Instance.new("UIStroke");
		["_Fortnait"] = Instance.new("ImageLabel");
		["_Stren"] = Instance.new("TextLabel");
		["_UIStroke2"] = Instance.new("UIStroke");
		["_STRENGTHNUMBER"] = Instance.new("TextLabel");
		["_UIStroke3"] = Instance.new("UIStroke");
		["_Sped"] = Instance.new("TextLabel");
		["_UIStroke4"] = Instance.new("UIStroke");
		["_SPEEDNUMBER"] = Instance.new("TextLabel");
		["_UIStroke5"] = Instance.new("UIStroke");
		["_DEF"] = Instance.new("TextLabel");
		["_UIStroke6"] = Instance.new("UIStroke");
		["_DEFENSENUMBER"] = Instance.new("TextLabel");
		["_UIStroke7"] = Instance.new("UIStroke");
		["_ENERGY"] = Instance.new("TextLabel");
		["_UIStroke8"] = Instance.new("UIStroke");
		["_ENERGYNUMBER"] = Instance.new("TextLabel");
		["_UIStroke9"] = Instance.new("UIStroke");
		["_sup"] = Instance.new("ImageLabel");
		["_UICorner2"] = Instance.new("UICorner");
		["_DEF1"] = Instance.new("TextLabel");
		["_UIStroke10"] = Instance.new("UIStroke");
		["_REBS"] = Instance.new("TextLabel");
		["_UIStroke11"] = Instance.new("UIStroke");
		["_REBSNUMBER"] = Instance.new("TextLabel");
		["_UIStroke12"] = Instance.new("UIStroke");
	}
 
	-- Properties:
 
	Converted["_AUTOFARM"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Converted["_AUTOFARM"].Name = "AUTOFARM"
	Converted["_AUTOFARM"].Parent = game:GetService("CoreGui")
 
	Converted["_Frame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_Frame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_Frame"].BorderSizePixel = 0
	Converted["_Frame"].Position = UDim2.new(0.0210622549, 0, 0.260050237, 0)
	Converted["_Frame"].Size = UDim2.new(0.284307986, 0, 0.496231169, 0)
	Converted["_Frame"].Parent = Converted["_AUTOFARM"]
 
	Converted["_UICorner"].Parent = Converted["_Frame"]
 
	Converted["_UIStroke"].Color = Color3.fromRGB(255, 255, 255)
	Converted["_UIStroke"].Thickness = 4
	Converted["_UIStroke"].Parent = Converted["_Frame"]
 
	Converted["_UIGradient"].Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
		ColorSequenceKeypoint.new(0.055710308253765106, Color3.fromRGB(255, 85.23676782846451, 0)),
		ColorSequenceKeypoint.new(0.11142061650753021, Color3.fromRGB(255, 170.47353565692902, 0)),
		ColorSequenceKeypoint.new(0.16713091731071472, Color3.fromRGB(254.2897117137909, 255, 0)),
		ColorSequenceKeypoint.new(0.22284123301506042, Color3.fromRGB(169.05292868614197, 255, 0)),
		ColorSequenceKeypoint.new(0.27855151891708374, Color3.fromRGB(83.81617605686188, 255, 0)),
		ColorSequenceKeypoint.new(0.33426183462142944, Color3.fromRGB(0, 255, 1.420576572418213)),
		ColorSequenceKeypoint.new(0.38997215032577515, Color3.fromRGB(0, 255, 86.65735960006714)),
		ColorSequenceKeypoint.new(0.44568246603012085, Color3.fromRGB(0, 255, 171.89414262771606)),
		ColorSequenceKeypoint.new(0.5013927817344666, Color3.fromRGB(0, 252.869074344635, 255)),
		ColorSequenceKeypoint.new(0.5571030378341675, Color3.fromRGB(0, 167.63235211372375, 255)),
		ColorSequenceKeypoint.new(0.6128133535385132, Color3.fromRGB(0, 82.39556908607483, 255)),
		ColorSequenceKeypoint.new(0.6685236692428589, Color3.fromRGB(2.841153144836426, 0, 255)),
		ColorSequenceKeypoint.new(0.7242339849472046, Color3.fromRGB(88.07793617248535, 0, 255)),
		ColorSequenceKeypoint.new(0.7799443006515503, Color3.fromRGB(173.31471920013428, 0, 255)),
		ColorSequenceKeypoint.new(0.835654616355896, Color3.fromRGB(255, 0, 251.4484977722168)),
		ColorSequenceKeypoint.new(0.8913649320602417, Color3.fromRGB(255, 0, 166.21171474456787)),
		ColorSequenceKeypoint.new(0.9470751881599426, Color3.fromRGB(255, 0, 80.97493171691895)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
	}
	Converted["_UIGradient"].Parent = Converted["_UIStroke"]
 
	Converted["_UIGradient1"].Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 153.00000607967377, 255)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 247.00000047683716))
	}
	Converted["_UIGradient1"].Parent = Converted["_Frame"]
 
	Converted["_ImageLabel"].BackgroundColor3 = Color3.fromRGB(0, 123.00000786781311, 255)
	Converted["_ImageLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_ImageLabel"].BorderSizePixel = 0
	Converted["_ImageLabel"].Position = UDim2.new(0.0438596494, 0, 0.020833334, 0)
	Converted["_ImageLabel"].Size = UDim2.new(0.912280679, 0, 0.125628158, 0)
	Converted["_ImageLabel"].Parent = Converted["_Frame"]
 
	Converted["_UICorner1"].Parent = Converted["_ImageLabel"]
 
	Converted["_TextLabel"].Font = Enum.Font.FredokaOne
	Converted["_TextLabel"].Text = "By Ciab"
	Converted["_TextLabel"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_TextLabel"].TextScaled = true
	Converted["_TextLabel"].TextSize = 14
	Converted["_TextLabel"].TextWrapped = true
	Converted["_TextLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_TextLabel"].BackgroundTransparency = 1
	Converted["_TextLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_TextLabel"].BorderSizePixel = 0
	Converted["_TextLabel"].Position = UDim2.new(1.46719131e-07, 0, 0.118450202, 0)
	Converted["_TextLabel"].Size = UDim2.new(0.999999881, 0, 0.749835074, 0)
	Converted["_TextLabel"].Parent = Converted["_ImageLabel"]
 
	Converted["_UIStroke1"].Parent = Converted["_TextLabel"]
 
	Converted["_Fortnait"].Image = "rbxassetid://17207994014"
	Converted["_Fortnait"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_Fortnait"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_Fortnait"].BorderSizePixel = 0
	Converted["_Fortnait"].Position = UDim2.new(0.0438596494, 0, 0.196428567, 0)
	Converted["_Fortnait"].Size = UDim2.new(0.912280679, 0, 0.774437666, 0)
	Converted["_Fortnait"].Name = "Fortnait"
	Converted["_Fortnait"].Parent = Converted["_Frame"]
 
	Converted["_Stren"].Font = Enum.Font.FredokaOne
	Converted["_Stren"].Text = "STRENGTH:"
	Converted["_Stren"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_Stren"].TextScaled = true
	Converted["_Stren"].TextSize = 25
	Converted["_Stren"].TextWrapped = true
	Converted["_Stren"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_Stren"].BackgroundTransparency = 1
	Converted["_Stren"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_Stren"].BorderSizePixel = 0
	Converted["_Stren"].Position = UDim2.new(0.0257487558, 0, 0.0420393385, 0)
	Converted["_Stren"].Size = UDim2.new(0.437757969, 0, 0.164446443, 0)
	Converted["_Stren"].Name = "Stren"
	Converted["_Stren"].Parent = Converted["_Fortnait"]
 
	Converted["_UIStroke2"].Parent = Converted["_Stren"]
 
	Converted["_STRENGTHNUMBER"].Font = Enum.Font.FredokaOne
	Converted["_STRENGTHNUMBER"].Text = "nil"
	Converted["_STRENGTHNUMBER"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_STRENGTHNUMBER"].TextScaled = true
	Converted["_STRENGTHNUMBER"].TextSize = 1
	Converted["_STRENGTHNUMBER"].TextWrapped = true
	Converted["_STRENGTHNUMBER"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_STRENGTHNUMBER"].BackgroundTransparency = 1
	Converted["_STRENGTHNUMBER"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_STRENGTHNUMBER"].BorderSizePixel = 0
	Converted["_STRENGTHNUMBER"].Position = UDim2.new(1, 0, 0, 0)
	Converted["_STRENGTHNUMBER"].Size = UDim2.new(1.13370693, 0, 0.986658394, 0)
	Converted["_STRENGTHNUMBER"].Name = "STRENGTHNUMBER"
	Converted["_STRENGTHNUMBER"].Parent = Converted["_Stren"]
 
	Converted["_UIStroke3"].Parent = Converted["_STRENGTHNUMBER"]
 
	Converted["_Sped"].Font = Enum.Font.FredokaOne
	Converted["_Sped"].Text = "SPEED:"
	Converted["_Sped"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_Sped"].TextScaled = true
	Converted["_Sped"].TextSize = 29
	Converted["_Sped"].TextWrapped = true
	Converted["_Sped"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_Sped"].BackgroundTransparency = 1
	Converted["_Sped"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_Sped"].BorderSizePixel = 0
	Converted["_Sped"].Position = UDim2.new(0.0257487558, 0, 0.20429185, 0)
	Converted["_Sped"].Size = UDim2.new(0.437757969, 0, 0.164446443, 0)
	Converted["_Sped"].Name = "Sped"
	Converted["_Sped"].Parent = Converted["_Fortnait"]
 
	Converted["_UIStroke4"].Parent = Converted["_Sped"]
 
	Converted["_SPEEDNUMBER"].Font = Enum.Font.FredokaOne
	Converted["_SPEEDNUMBER"].Text = "nil"
	Converted["_SPEEDNUMBER"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_SPEEDNUMBER"].TextScaled = true
	Converted["_SPEEDNUMBER"].TextSize = 1
	Converted["_SPEEDNUMBER"].TextWrapped = true
	Converted["_SPEEDNUMBER"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_SPEEDNUMBER"].BackgroundTransparency = 1
	Converted["_SPEEDNUMBER"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_SPEEDNUMBER"].BorderSizePixel = 0
	Converted["_SPEEDNUMBER"].Position = UDim2.new(1, 0, 0, 0)
	Converted["_SPEEDNUMBER"].Size = UDim2.new(1.13370693, 0, 0.986658394, 0)
	Converted["_SPEEDNUMBER"].Name = "SPEEDNUMBER"
	Converted["_SPEEDNUMBER"].Parent = Converted["_Sped"]
 
	Converted["_UIStroke5"].Parent = Converted["_SPEEDNUMBER"]
 
	Converted["_DEF"].Font = Enum.Font.FredokaOne
	Converted["_DEF"].Text = "DEFENSE:"
	Converted["_DEF"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_DEF"].TextScaled = true
	Converted["_DEF"].TextSize = 28
	Converted["_DEF"].TextWrapped = true
	Converted["_DEF"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_DEF"].BackgroundTransparency = 1
	Converted["_DEF"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_DEF"].BorderSizePixel = 0
	Converted["_DEF"].Position = UDim2.new(0.0257487558, 0, 0.38976115, 0)
	Converted["_DEF"].Size = UDim2.new(0.437757969, 0, 0.164446443, 0)
	Converted["_DEF"].Name = "DEF"
	Converted["_DEF"].Parent = Converted["_Fortnait"]
 
	Converted["_UIStroke6"].Parent = Converted["_DEF"]
 
	Converted["_DEFENSENUMBER"].Font = Enum.Font.FredokaOne
	Converted["_DEFENSENUMBER"].Text = "nil"
	Converted["_DEFENSENUMBER"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_DEFENSENUMBER"].TextScaled = true
	Converted["_DEFENSENUMBER"].TextSize = 1
	Converted["_DEFENSENUMBER"].TextWrapped = true
	Converted["_DEFENSENUMBER"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_DEFENSENUMBER"].BackgroundTransparency = 1
	Converted["_DEFENSENUMBER"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_DEFENSENUMBER"].BorderSizePixel = 0
	Converted["_DEFENSENUMBER"].Position = UDim2.new(1, 0, 0, 0)
	Converted["_DEFENSENUMBER"].Size = UDim2.new(1.13370693, 0, 0.986658394, 0)
	Converted["_DEFENSENUMBER"].Name = "DEFENSENUMBER"
	Converted["_DEFENSENUMBER"].Parent = Converted["_DEF"]
 
	Converted["_UIStroke7"].Parent = Converted["_DEFENSENUMBER"]
 
	Converted["_ENERGY"].Font = Enum.Font.FredokaOne
	Converted["_ENERGY"].Text = "ENERGY:"
	Converted["_ENERGY"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_ENERGY"].TextScaled = true
	Converted["_ENERGY"].TextSize = 28
	Converted["_ENERGY"].TextWrapped = true
	Converted["_ENERGY"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_ENERGY"].BackgroundTransparency = 1
	Converted["_ENERGY"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_ENERGY"].BorderSizePixel = 0
	Converted["_ENERGY"].Position = UDim2.new(0.0257487558, 0, 0.552013576, 0)
	Converted["_ENERGY"].Size = UDim2.new(0.437757969, 0, 0.164446443, 0)
	Converted["_ENERGY"].Name = "ENERGY"
	Converted["_ENERGY"].Parent = Converted["_Fortnait"]
 
	Converted["_UIStroke8"].Parent = Converted["_ENERGY"]
 
	Converted["_ENERGYNUMBER"].Font = Enum.Font.FredokaOne
	Converted["_ENERGYNUMBER"].Text = "nil"
	Converted["_ENERGYNUMBER"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_ENERGYNUMBER"].TextScaled = true
	Converted["_ENERGYNUMBER"].TextSize = 1
	Converted["_ENERGYNUMBER"].TextWrapped = true
	Converted["_ENERGYNUMBER"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_ENERGYNUMBER"].BackgroundTransparency = 1
	Converted["_ENERGYNUMBER"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_ENERGYNUMBER"].BorderSizePixel = 0
	Converted["_ENERGYNUMBER"].Position = UDim2.new(1, 0, 0, 0)
	Converted["_ENERGYNUMBER"].Size = UDim2.new(1.13370693, 0, 0.986658394, 0)
	Converted["_ENERGYNUMBER"].Name = "ENERGYNUMBER"
	Converted["_ENERGYNUMBER"].Parent = Converted["_ENERGY"]
 
	Converted["_UIStroke9"].Parent = Converted["_ENERGYNUMBER"]
 
	Converted["_sup"].BackgroundColor3 = Color3.fromRGB(0, 255, 204.0000182390213)
	Converted["_sup"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_sup"].BorderSizePixel = 0
	Converted["_sup"].Position = UDim2.new(-0.0260067098, 0, 0.872107267, 0)
	Converted["_sup"].Size = UDim2.new(1.05175519, 0, 0.127892867, 0)
	Converted["_sup"].Name = "sup"
	Converted["_sup"].Parent = Converted["_Fortnait"]
 
	Converted["_UICorner2"].Parent = Converted["_sup"]
 
	Converted["_DEF1"].Font = Enum.Font.FredokaOne
	Converted["_DEF1"].Text = "sup" .. game.Players.LocalPlayer.DisplayName
	Converted["_DEF1"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_DEF1"].TextSize = 28
	Converted["_DEF1"].TextWrapped = true
	Converted["_DEF1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_DEF1"].BackgroundTransparency = 1
	Converted["_DEF1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_DEF1"].BorderSizePixel = 0
	Converted["_DEF1"].Position = UDim2.new(0, 0, 0.105724856, 0)
	Converted["_DEF1"].Size = UDim2.new(1, 0, 0.742611945, 0)
	Converted["_DEF1"].Name = "DEF"
	Converted["_DEF1"].Parent = Converted["_sup"]
 
	Converted["_UIStroke10"].Parent = Converted["_DEF1"]
 
	Converted["_REBS"].Font = Enum.Font.FredokaOne
	Converted["_REBS"].Text = "REBIRTHS"
	Converted["_REBS"].TextColor3 = Color3.fromRGB(255, 234.00001645088196, 0)
	Converted["_REBS"].TextScaled = true
	Converted["_REBS"].TextSize = 28
	Converted["_REBS"].TextWrapped = true
	Converted["_REBS"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_REBS"].BackgroundTransparency = 1
	Converted["_REBS"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_REBS"].BorderSizePixel = 0
	Converted["_REBS"].Position = UDim2.new(0.0257487558, 0, 0.706855357, 0)
	Converted["_REBS"].Size = UDim2.new(0.437757969, 0, 0.164446443, 0)
	Converted["_REBS"].Name = "REBS"
	Converted["_REBS"].Parent = Converted["_Fortnait"]
 
	Converted["_UIStroke11"].Parent = Converted["_REBS"]
 
	Converted["_REBSNUMBER"].Font = Enum.Font.FredokaOne
	Converted["_REBSNUMBER"].Text = "nil"
	Converted["_REBSNUMBER"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_REBSNUMBER"].TextScaled = true
	Converted["_REBSNUMBER"].TextSize = 1
	Converted["_REBSNUMBER"].TextWrapped = true
	Converted["_REBSNUMBER"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_REBSNUMBER"].BackgroundTransparency = 1
	Converted["_REBSNUMBER"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_REBSNUMBER"].BorderSizePixel = 0
	Converted["_REBSNUMBER"].Position = UDim2.new(1, 0, 0, 0)
	Converted["_REBSNUMBER"].Size = UDim2.new(1.13370693, 0, 0.986658394, 0)
	Converted["_REBSNUMBER"].Name = "REBSNUMBER"
	Converted["_REBSNUMBER"].Parent = Converted["_REBS"]
 
	Converted["_UIStroke12"].Parent = Converted["_REBSNUMBER"]
 
 
	local playerid = game.Players.LocalPlayer.UserId
	local playerStats = game:GetService("ReplicatedStorage").Datas:WaitForChild(tostring(playerid))
 
	local function formatNumberForTheStats(number)
		if number >= 1_000_000_000_000 then
			return string.format("%.2fT", number / 1_000_000_000_000) 
		elseif number >= 1_000_000_000 then
			return string.format("%.2fB", number / 1_000_000_000)
		elseif number >= 1_000_000 then
			return string.format("%.2fM", number / 1_000_000)
		elseif number >= 1_000 then
			return string.format("%.2fK", number / 1_000)
		else
			return tostring(number)
		end
	end
 
 
	local function updateStats()
		Converted["_STRENGTHNUMBER"].Text = formatNumberForTheStats(math.floor(playerStats.Strength.Value))
		Converted["_DEFENSENUMBER"].Text = formatNumberForTheStats(math.floor(playerStats.Defense.Value))
		Converted["_ENERGYNUMBER"].Text = formatNumberForTheStats(math.floor(playerStats.Energy.Value))
		Converted["_SPEEDNUMBER"].Text = formatNumberForTheStats(math.floor(playerStats.Speed.Value))
		Converted["_REBSNUMBER"].Text = tostring(playerStats.Rebirth.Value)
	end
 
 
	updateStats()
 
 
	playerStats.Strength.Changed:Connect(updateStats)
	playerStats.Defense.Changed:Connect(updateStats)
	playerStats.Energy.Changed:Connect(updateStats)
	playerStats.Speed.Changed:Connect(updateStats)
 
	local runService = game:GetService("RunService")
 
	runService.RenderStepped:Connect(function()
		Converted["_UIGradient"].Rotation += 2
		Converted["_UIGradient1"].Rotation += 2
	end)
end
 
 
local function onPlayerRespawn()
	createGUI()
end
 
 
local player = game.Players.LocalPlayer
player.CharacterAdded:Connect(onPlayerRespawn)
 
 
 
createGUI()
 
 
 
local player = game.Players.LocalPlayer
local playerId = player.UserId
local data = game:GetService("ReplicatedStorage").Datas
local playerData = data:WaitForChild(tostring(playerId))
local statsz = playerData:WaitForChild("Defense")
local zeni = playerData:WaitForChild("Zeni")
 
local function ANTIAFK()
	local vu = game:GetService("VirtualUser")
	game:GetService("Players").LocalPlayer.Idled:connect(function()
		vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
		wait(1)
		vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
	end)
end
 
coroutine.wrap(ANTIAFK)()
 
 
 
local function FloatByHimself()
	local function floatPlayer(character)
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 10)
		if humanoidRootPart then
			local bodyPosition = Instance.new("BodyPosition")
			bodyPosition.Position = humanoidRootPart.Position + Vector3.new(0, 0.1, 0)
			bodyPosition.MaxForce = Vector3.new(0, 4000, 0)
			bodyPosition.P = 2000
			bodyPosition.D = 100
			bodyPosition.Parent = humanoidRootPart
 
			-- Update the BodyPosition in the Stepped event
			game:GetService("RunService").Stepped:Connect(function()
                if bodyPosition and bodyPosition.Parent and humanoidRootPart and humanoidRootPart.Parent then
				    bodyPosition.Position = humanoidRootPart.Position + Vector3.new(0, 0.0001, 0)
                end
			end)
		else
			warn("HumanoidRootPart not found in character")
		end
	end
 
	game.Players.LocalPlayer.CharacterAdded:Connect(floatPlayer)
	if game.Players.LocalPlayer.Character then
		floatPlayer(game.Players.LocalPlayer.Character)
	end
end
 
task.spawn(FloatByHimself)
 
local function Block()
	while true do
		local args = {
			[1] = true
		}
 
		game:GetService("ReplicatedStorage"):WaitForChild("Package"):WaitForChild("Events"):WaitForChild("block"):InvokeServer(unpack(args))
		wait(.1)
	end
end
task.spawn(Block)
 
local camera = game.Workspace.CurrentCamera
task.spawn(function()
	while true and task.wait() do
		pcall(function()
			game.Players.LocalPlayer.Status.Blocking.Value = true
		end)
	end
end)
 
local function Charge()
	while true do
		wait(.1)
		local args = {
			[1] = "Blacknwhite27" -- **Replace with your actual username!**
		}
 
		game:GetService("ReplicatedStorage").Package.Events.cha:InvokeServer(unpack(args))
	end
end
 
task.spawn(Charge)
 
 

-- Go to bills
 
local function TeleportToWhis()
	local args = {
  	  [1] = "T.O.P"
	}

	game:GetService("ReplicatedStorage").Package.Events.TP:InvokeServer(unpack(args))
end
 
local function CheckIfItHasGoodStatsAndZeniToTeleportToWhis()
	if statsz.Value > 400000000 and zeni.Value > 15000 then
		TeleportToWhis()
	end
end
 
local function ChekEverySeconds()
	while true do
		wait(.1)
		CheckIfItHasGoodStatsAndZeniToTeleportToWhis()
	end
end
 
local function CheckGameId()
	while true do
		wait(.1)
		if game.PlaceId == 3311165597 then
			coroutine.wrap(ChekEverySeconds)()
		end
	end
end
 
coroutine.wrap(CheckGameId)()
 
 
 
-- stack
 
task.spawn(function()
	local yo = game:GetService('Players').LocalPlayer
	local folderData = game.ReplicatedStorage.Datas[yo.UserId]
	local afk = game:service'VirtualUser'
	local statsRequeridosFarm = 10000
	local events = game.ReplicatedStorage.Package.Events
	local equipRemote = game:GetService("ReplicatedStorage").Package.Events.equipskill
	local cargaAndBloqueo = true
	local activadaSpeed = false
	local statsPlayerFarmSa
 
	local millon = 1000000
	local transformaciones = {
		fases = {
			{name = "Time Breaker", fuerza = 630000000},
			{name = "True Jui", fuerza = 750000000},
			{name = "Corrupt Astral", fuerza = 250000000},
			{name = "Beast", fuerza = 120000000},
			{name = "SSJB4", fuerza = 50000000},
			{name = "LBSSJ4", fuerza = 100000000},
			{name = "True God of Creation", fuerza = 30000000},
			{name = "True God of Destruction", fuerza = 30000000},
			{name = "SSJR3", fuerza = 50000000},
			{name = "God of Creation", fuerza = 30000000},
			{name = "God of Destruction", fuerza = 30000000},
			{name = "Super Broly", fuerza = 4000000},
			{name = "Jiren Ultra Instinct", fuerza = 14000000},
			{name = "Mastered Ultra Instinct", fuerza = 14000000},
			{name = "Godly SSJ2", fuerza = 8000000},
			{name = "LSSJG", fuerza = 3000000},
			{name = "Ultra Instinct Omen", fuerza = 5000000},
			{name = "LSSJ4", fuerza = 1800000},
			{name = "SSJG4", fuerza = 1000000},
			{name = "Evil SSJ", fuerza = 4000000},
			{name = "Blue Evolution", fuerza = 3500000},
			{name = "LSSJ3", fuerza = 800000},
			{name = "Dark Rose", fuerza = 3500000},
			{name = "SSJ Berseker", fuerza = 3000000},
			{name = "Kefla SSJ2", fuerza = 3000000},
			{name = "True Rose", fuerza = 2400000},
			{name = "SSJ Blue Kaioken", fuerza = 2200000},
			{name = "SSJ5", fuerza = 550000},
			{name = "Mystic Kaioken", fuerza = 250000},
			{name = "SSJ Rose", fuerza = 1400000},
			{name = "SSJ Blue", fuerza = 1200000},
			{name = "LSSJ Kaioken", fuerza = 160000},
			{name = "Corrupt SSJ", fuerza = 700000},
			{name = "SSJ Rage", fuerza = 700000},
			{name = "SSJ2 Kaioken", fuerza = 50000},
			{name = "SSJ4", fuerza = 300000},
			{name = "Mystic", fuerza = 200000},
			{name = "LSSJ", fuerza = 140000},
			{name = "SSJ3", fuerza = 95000},
			{name = "SSJ2 Majin", fuerza = 65000},
			{name = "Spirit SSJ", fuerza = 65000},
			{name = "SSJ Kaioken", fuerza = 16000},
		}
	}
 
	local function strength()
		return folderData.Strength.Value
	end
 
	local function selectedForm()
		return game.Players.LocalPlayer.Status.SelectedTransformation.Value
	end
 
	local function valorFase()
		return game.Players.LocalPlayer.Status.Transformation.Value
	end
 
	local function ki()
		return game.Workspace.Living[yo.Name].Stats.Ki.Value
	end
 
	local function kiRequerido()
		return game:GetService("Players").LocalPlayer.Character.Stats.Ki.MaxValue / 10
	end
 
	local function ejecutarForma()
		while selectedForm() ~= valorFase() do
			pcall(function()
				if ki() > (kiRequerido() + 10) then
					if game.PlaceId == 3311165597 then
					game:GetService("ReplicatedStorage").Package.Events.Hehehe:InvokeServer()
					elseif game.PlaceId == 114014249462644 then
						game:GetService("ReplicatedStorage").Package.Events.Hehehe:InvokeServer()

					end
				end
			end)
			task.wait()
		end
	end
 
	local function transformarse(array)
		for _, v in pairs(transformaciones[array]) do
			if strength() >= v.fuerza then
				local success, err = pcall(function()
					equipRemote:InvokeServer(v.name)
				end)
				if not success then
					print("Failed to equip transformation:", err)
				end
				if equipRemote:InvokeServer(v.name) then
					break 
				end
			end
		end
		ejecutarForma()
	end
 
	-- Continuously check stats and apply transformation (Faster checks)
	while true do
		transformarse("fases")
		task.wait(1.2) -- Check every 1 second
	end
end)
 
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Events = ReplicatedStorage:WaitForChild("Package"):WaitForChild("Events")
 
local function SafeWaitForChild(parent, name, timeout)
	local success, result = pcall(function()
		return parent:WaitForChild(name, timeout)
	end)
	if not success then
		warn("Failed to find " .. name .. ": " .. tostring(result))
		return nil
	end
	return result
end
 
local AllBosses = {
	{
		PlaceId = 3311165597, 
		Name = "Klirin",
		MinStats = 0,
		MaxStats = 100000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -5
	},
	{
		PlaceId = 3311165597, 
		Name = "Radish",
		MinStats = 100001,
		MaxStats = 200000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 3311165597,
		Name = "Mapa",
		MinStats = 200001,
		MaxStats = 700000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 3311165597, 
		Name = "Super Vegetable",
		MinStats = 700001,
		MaxStats = 1400000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 3311165597, 
		Name = "Chilly",
		MinStats = 1400001,
		MaxStats = 5000001,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 3311165597, 
		Name = "Perfect Atom",
		MinStats = 5000001,
		MaxStats = 8000000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 3311165597, 
		Name = "SSJ2 Wukong",
		MinStats = 8000001,
		MaxStats = 25000000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 3311165597,
		Name = "SSJB Wukong",
		MinStats = 25000001,
		MaxStats = 50000000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 3311165597,
		Name = "Broccoli",
		MinStats = 50000001,
		MaxStats = 150000000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 3311165597, 
		Name = "SSJG Kakata",
		MinStats = 150000001,
		MaxStats = 2000000000000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 114014249462644,
		Name = "Piclow (Base)",
		MinStats = 100000000,
		MaxStats = 1500000000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 114014249462644,
		Name = "Caulla (Base)",
		MinStats = 1500000001,
		MaxStats = 1510000000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 114014249462644,
		Name = "Nohag (Potential Awoken)",
		MinStats = 1510000001,
		MaxStats = 1600000000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 114014249462644,
		Name = "Kall (LSSJ)",
		MinStats = 1600000001,
		MaxStats = 1700000000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	},
	{
		PlaceId = 114014249462644,
		Name = "SSJBK Wukong",
		MinStats = 1700000001,
		MaxStats = 1700000000000000000000000000000000000000,
		QuestLocation = workspace.Others.NPCs,
		FightLocation = workspace.Living,
		Distance = -2
	}


}


-- Variabili globali per il personaggio che verranno aggiornate al respawn
local character, humanoid, humanoidRootPart

 
-- ==============================================================================
-- NUOVA SEZIONE DI COMBATTIMENTO (ANTI RACE-CONDITION V2 - "PARANOID MODE")
-- ==============================================================================
local function TeleportAndFight(bossData)
	-- Questa funzione di combattimento è progettata per essere estremamente sicura.
	-- Invece di fare affidamento su un riferimento iniziale al boss,
	-- lo cercherà attivamente ad ogni ciclo per evitare di lavorare su un oggetto "fantasma".

	local function getValidBoss()
		-- Se il giocatore è morto, non c'è bisogno di cercare un boss.
		if not (humanoid and humanoid.Health > 0) then return nil end

		local bossModel = bossData.FightLocation:FindFirstChild(bossData.Name)
		if not (bossModel and bossModel.Parent) then return nil end

		local bossHumanoid = bossModel:FindFirstChildOfClass("Humanoid")
		local bossHRP = bossModel:FindFirstChild("HumanoidRootPart")

		if bossHumanoid and bossHRP and bossHumanoid.Health > 0 then
			return bossModel -- Ritorna il modello del boss solo se è completamente valido
		end
		return nil
	end

	-- Ciclo di combattimento principale
	while true do
		local currentBoss = getValidBoss()

		-- Se in qualsiasi momento il boss non è più valido (sconfitto, despawnato)
		-- o il giocatore muore, esci dal ciclo di combattimento.
		if not currentBoss then
			break
		end

		local bossHRP = currentBoss.HumanoidRootPart -- Ora è sicuro accedervi

		-- Aggiorna la telecamera e la posizione
		pcall(function()
			camera.CFrame = CFrame.new(camera.CFrame.Position, bossHRP.Position)
			local behindOffset = bossHRP.CFrame.LookVector * bossData.Distance
			local behindPosition = bossHRP.Position + behindOffset
			humanoidRootPart.CFrame = CFrame.new(behindPosition, bossHRP.Position)
		end)

		-- Esegui gli attacchi
		pcall(function()
			if game.PlaceId == 3311165597 then
				local ReplicatedStorage = game:GetService("ReplicatedStorage")
				local letsplayagame = ReplicatedStorage:WaitForChild("Package"):WaitForChild("Events"):WaitForChild("letsplayagame")
						
				game:GetService("ReplicatedStorage").Package.Events.p:FireServer("Blacknwhite27", 1)

				coroutine.wrap(function() letsplayagame:InvokeServer("Meteor Crash", "Blacknwhite27") end)()
				coroutine.wrap(function() letsplayagame:InvokeServer("Wolf Fang Fist", "Blacknwhite27") end)()
				coroutine.wrap(function() letsplayagame:InvokeServer("Mach Kick", "Blacknwhite27") end)()
				coroutine.wrap(function() letsplayagame:InvokeServer("Spirit Barrage", "Blacknwhite27") end)()
				coroutine.wrap(function() letsplayagame:InvokeServer("Super Dragon Fist", "Blacknwhite27") end)()
			elseif game.PlaceId == 114014249462644 then
				local ReplicatedStorage = game:GetService("ReplicatedStorage")
				local Higoober = ReplicatedStorage:WaitForChild("Package"):WaitForChild("Events"):WaitForChild("letsplayagame")
						
				game:GetService("ReplicatedStorage").Package.Events.p:FireServer("Blacknwhite27", 1)

				coroutine.wrap(function() Higoober:InvokeServer("Meteor Crash", "Blacknwhite27") end)()
				coroutine.wrap(function() Higoober:InvokeServer("Wolf Fang Fist", "Blacknwhite27") end)()
				coroutine.wrap(function() Higoober:InvokeServer("Mach Kick", "Blacknwhite27") end)()
				coroutine.wrap(function() Higoober:InvokeServer("Spirit Barrage", "Blacknwhite27") end)()
				coroutine.wrap(function() Higoober:InvokeServer("Super Dragon Fist", "Blacknwhite27") end)()	
			end
		end)

		task.wait() -- Attendi il prossimo frame prima di ricontrollare
	end

	print(bossData.Name .. " non più valido. Fine del combattimento.")
	-- Ripristina la telecamera
	pcall(function()
		camera.CameraType = Enum.CameraType.Custom
		camera.CameraSubject = humanoid
	end)
end
 
local function WaitForBossToSpawn(bossData, timeLimit)
	local startTime = os.time()
	local bossReady = false
 
	repeat
        -- Se il giocatore muore mentre aspetta, interrompe la funzione
        if not (humanoid and humanoid.Health > 0) then return end
		task.wait() 
		local boss = SafeWaitForChild(bossData.FightLocation, bossData.Name)
		bossReady = boss and boss:FindFirstChild("HumanoidRootPart") and boss:FindFirstChild("Humanoid")
	until bossReady or os.time() - startTime > timeLimit 
 
	if bossReady then
		print("Boss " .. bossData.Name .. " è apparso!")
        
        task.wait()
        
		TeleportAndFight(bossData)
	else
		print("Impossibile trovare " .. bossData.Name .. " entro il tempo limite. Passo al boss successivo.")
	end
end
 
local function CheckAndFightBoss(bossData)
    if not bossData then return end
	
	local questStarted = false
	print("Inizio la missione per " .. bossData.Name)

	if bossData.Request then 
		bossData.Request() 
	end

	local startTime = os.time()
	local questTimeout = 30 

	while not questStarted do
		if os.time() - startTime > questTimeout then
			print("TIMEOUT MISSIONE: Impossibile ottenere la quest per " .. bossData.Name .. " in 30 secondi. Resetto il personaggio per sbloccare la situazione.")
			humanoid.Health = 0
			return -- Esce dalla funzione, il loop Main gestirà il respawn
		end
        -- Se il giocatore muore, esce dalla funzione
        if not (humanoid and humanoid.Health > 0) then return end

		local bossNpc = SafeWaitForChild(bossData.QuestLocation, bossData.Name)
		if bossNpc then
			while playerData:WaitForChild("Quest").Value ~= bossData.Name do
				if os.time() - startTime > questTimeout then break end
                -- Se il giocatore muore, esce dal loop
                if not (humanoid and humanoid.Health > 0) then return end
				humanoidRootPart.CFrame = bossNpc.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
				Events:WaitForChild("Qaction"):InvokeServer(bossNpc)
                task.wait() 
			end

			if playerData:WaitForChild("Quest").Value == bossData.Name then
				print("Azione missione invocata e confermata per " .. bossData.Name) 
				questStarted = true
			end
		else
			task.wait() 
		end
	end

	if questStarted then
		WaitForBossToSpawn(bossData, 60)
	end
end
 
-- ==============================================================================
-- NUOVA SEZIONE CENTRALE PER LA GESTIONE DEL RESPAWN (AFFIDABILE)
-- ==============================================================================
local function onCharacterAdded(newCharacter)
    print("Nuovo personaggio rilevato. Aggiornamento variabili globali...")
	character = newCharacter
	humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	humanoid = character:WaitForChild("Humanoid")
 
	humanoid.Died:Connect(function()
		print("EVENTO DIED RILEVATO! In attesa di respawn...")
	end)
end
 
player.CharacterAdded:Connect(onCharacterAdded)
 
-- Gestisce il caso in cui lo script viene eseguito dopo che il personaggio è già caricato
if player.Character then
	onCharacterAdded(player.Character)
else
    -- Se il personaggio non è ancora pronto, attende la prima volta
    print("In attesa del caricamento iniziale del personaggio...")
    onCharacterAdded(player.CharacterAdded:Wait())
end
-- ==============================================================================


-- Funzione di supporto per trovare i dati di un boss per nome
local function findBossData(bossName)
    for _, data in ipairs(AllBosses) do
        if data.Name == bossName then
            return data
        end
    end
    return nil -- Ritorna nil se non trovato
end

-- ==============================================================================
-- FUNZIONE PRINCIPALE DI CONTROLLO (Main) CON LOGICA DI RITARDO
-- ==============================================================================

local villsPlanetReady = false -- Flag per gestire il ritardo iniziale sul pianeta di Vills

local function Main()
    -- Definisci le soglie di statistiche per i diversi stadi di farming
    local kakataThreshold = findBossData("SSJG Kakata").MinStats
    local nohagThreshold = findBossData("SSJBK Wukong").MinStats

    while true do
        task.wait(1) -- Attesa di base per ogni ciclo
        
        if not (humanoid and humanoid.Health > 0) then
            print("Il giocatore è morto o non valido. In attesa del respawn...")
            task.wait(1) 
            continue 
        end

        local currentStats = statsz.Value
        local currentPlaceId = game.PlaceId

        --======================================================================
        -- LOGICA PER IL PIANETA DI VILLS (CON RITARDO INIZIALE)
        --======================================================================
        if currentPlaceId == 114014249462644 then
            -- Se questa è la prima volta che eseguiamo il ciclo su questo pianeta, attiva il ritardo
            if not villsPlanetReady then
                print("Rilevato ingresso nel pianeta di Vills. Attendo 7 secondi per la stabilizzazione...")
                task.wait(7)
                villsPlanetReady = true
                print("Stabilizzazione completata. Avvio del farm.")
                continue -- Riavvia il ciclo per iniziare subito a farmare
            end

            -- -- -- La logica di farming vera e propria parte solo dopo il ritardo -- -- --
            if currentStats >= nohagThreshold then
                print("STATO FARMING [PIANETA DI VILLS]: Nohag")
                local nohagData = findBossData("Nohag (Potential Awoken)")
                if nohagData then CheckAndFightBoss(nohagData) end
            else
                print("STATO PROGRESSIONE [PIANETA DI VILLS]")
                local foughtBoss = false
                for _, bossData in ipairs(AllBosses) do
                    if bossData.PlaceId == currentPlaceId and currentStats >= bossData.MinStats and currentStats <= bossData.MaxStats then
                        CheckAndFightBoss(bossData)
                        foughtBoss = true
                        break
                    end
                end
                if not foughtBoss then
                    print("Nessun boss adatto trovato sul pianeta di Vills per le statistiche attuali. Attendo...")
                    task.wait(5)
                end
            end

        --======================================================================
        -- LOGICA PER IL PIANETA TERRA (E RESET DEL FLAG)
        --======================================================================
        elseif currentPlaceId == 3311165597 then
            villsPlanetReady = false -- Resetta il flag quando siamo sulla Terra

            if currentStats >= kakataThreshold then
                print("STATO FARMING [TERRA]: Kakata")
                local kakataData = findBossData("SSJG Kakata")
                if kakataData then CheckAndFightBoss(kakataData) end
            else
                print("STATO PROGRESSIONE [TERRA]")
                local foughtBoss = false
                for _, bossData in ipairs(AllBosses) do
                    if bossData.PlaceId == currentPlaceId and currentStats >= bossData.MinStats and currentStats <= bossData.MaxStats then
                        CheckAndFightBoss(bossData)
                        foughtBoss = true
                        break 
                    end
                end
                if not foughtBoss then
                    print("Nessun boss adatto trovato sulla Terra per le statistiche attuali. Attendo...")
                    task.wait(5)
                end
            end
        
        --======================================================================
        -- LOGICA PER ALTRI LUOGHI (E RESET DEL FLAG)
        --======================================================================
        else
			villsPlanetReady = false -- Resetta il flag anche se siamo in un luogo sconosciuto
			task.wait(1) 
        end
    end
end


task.spawn(Main)
 
-- Questa parte per la vita infinita potrebbe interferire con la logica di morte,
-- ma la lasciamo dato che il reset forzato (humanoid.Health = 0) la bypassa.
task.spawn(function()
    while true do
        if humanoid then
            humanoid.HealthChanged:Connect(function(newHealth)
                if newHealth < humanoid.MaxHealth then
                    humanoid.Health = humanoid.MaxHealth
                end
            end)
        end
        task.wait(1)
    end
end)


-- NUOVA FUNZIONE PER IL REBIRTH
local function CheckAndPerformRebirth()
    while true do
        task.wait(.5) -- Attendi 5 secondi tra un controllo e l'altro per non sovraccaricare il gioco

        local player = game.Players.LocalPlayer
        local playerData = game:GetService("ReplicatedStorage").Datas:FindFirstChild(tostring(player.UserId))

        if playerData then
            local strength = playerData:FindFirstChild("Strength")
            local rebirths = playerData:FindFirstChild("Rebirth")

            if strength and rebirths then
                local requiredStrength = 2000000 * (rebirths.Value + 1)
                local maxStrengthForRebirth = requiredStrength * 2 -- Fino a 2 volte le stats richieste

                if strength.Value >= requiredStrength and strength.Value <= maxStrengthForRebirth then
                    print("Tentativo di Rebirth: Statistiche sufficienti. Forza attuale: " .. tostring(strength.Value) .. ", Richiesto: " .. tostring(requiredStrength) .. ", Max per Rebirth: " .. tostring(maxStrengthForRebirth))
                    
                    -- Esegui l'evento di rebirth specificato dall'utente
                    local success, err = pcall(function()
                        game:GetService("ReplicatedStorage").Package.Events.reb:InvokeServer()
                    end)

                    if success then
                        print("Rebirth eseguito con successo usando Events.d!")
                    else
                        warn("Errore durante l'esecuzione del Rebirth (Events.d): " .. tostring(err))
                    end
                else
                    -- print("Condizioni per il rebirth non soddisfatte. Forza: " .. tostring(strength.Value) .. ", Richiesto: " .. tostring(requiredStrength))
                end
            end
        end
    end
end

task.spawn(CheckAndPerformRebirth)


-- ==============================================================================
-- NUOVA GUI PER IL TIMER (Stile Aggiornato)
-- ==============================================================================
local function CreateTimerGUI()
    -- Crea gli oggetti della GUI
    local TimerScreenGui = Instance.new("ScreenGui")
    local TimerFrame = Instance.new("Frame")
    local TimerTextLabel = Instance.new("TextLabel")
    local TextStroke = Instance.new("UIStroke") -- Bordo per il testo
    local UICorner = Instance.new("UICorner")
    local UIStroke = Instance.new("UIStroke") -- Bordo per il frame

    -- Impostazioni ScreenGui
    TimerScreenGui.Name = "RebirthTimerGUI"
    TimerScreenGui.Parent = game:GetService("CoreGui")
    TimerScreenGui.ResetOnSpawn = false
    TimerScreenGui.Enabled = false
    TimerScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    TimerScreenGui.DisplayOrder = 999

    -- Impostazioni Frame
    TimerFrame.Name = "TimerFrame"
    TimerFrame.Parent = TimerScreenGui
    TimerFrame.Size = UDim2.new(0, 220, 0, 40) -- Leggermente più largo per il testo
    TimerFrame.Position = UDim2.new(0.5, -110, 0, -48)
    TimerFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Sfondo nero
    TimerFrame.BackgroundTransparency = 0.4 -- Trasparenza come in foto
    TimerFrame.Active = true
    TimerFrame.Draggable = true

    -- Stile del Frame
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = TimerFrame
    UIStroke.Color = Color3.fromRGB(255, 255, 0)
    UIStroke.Thickness = 2
    UIStroke.Parent = TimerFrame

    -- Impostazioni TextLabel
    TimerTextLabel.Name = "TimerTextLabel"
    TimerTextLabel.Parent = TimerFrame
    TimerTextLabel.Size = UDim2.new(1, 0, 1, 0)
    TimerTextLabel.BackgroundTransparency = 1
    TimerTextLabel.Font = Enum.Font.FredokaOne
    TimerTextLabel.Text = "Teleport in: 6000"
    TimerTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- Testo bianco
    TimerTextLabel.TextScaled = true
    TimerTextLabel.TextSize = 14
    TimerTextLabel.TextWrapped = true
    
    -- Stile del Testo (Bordo nero)
    TextStroke.Parent = TimerTextLabel
    TextStroke.Color = Color3.fromRGB(0, 0, 0)
    TextStroke.Thickness = 1.2
    
    -- Logica per il trascinamento (Identica a prima)
    local userInputService = game:GetService("UserInputService")
    local dragging
    local dragInput
    local dragStart
    local startPos

    TimerFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = TimerFrame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    TimerFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    userInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + (input.Position.X - dragStart.X),
                                     startPos.Y.Scale, startPos.Y.Offset + (input.Position.Y - dragStart.Y))
            TimerFrame.Position = newPos
        end
    end)

    return TimerScreenGui, TimerTextLabel
end

-- Crea la GUI una sola volta e ottieni i riferimenti
local TimerScreenGui, TimerTextLabel = CreateTimerGUI()
-- ==============================================================================


-- NUOVA FUNZIONE TIMER PER TELETRASPORTO (con controllo GUI)
local function RebirthTimerAndTeleport()
    local timerEndTime = nil
    local VILLS_PLANET_ID = 114014249462644
    local TIMER_DURATION = 6000 -- 6000 secondi

    while true do
        task.wait(1) -- Controlla ogni secondo

        local player = game.Players.LocalPlayer
        local playerData = game:GetService("ReplicatedStorage").Datas:FindFirstChild(tostring(player.UserId))

        if playerData and game.PlaceId == VILLS_PLANET_ID then
            local strength = playerData:FindFirstChild("Strength")
            local rebirths = playerData:FindFirstChild("Rebirth")

            if strength and rebirths then
                local requiredStrength = 2000000 * (rebirths.Value + 1)
                local strengthThreshold = requiredStrength * 2

                -- CONDIZIONE DI ATTIVAZIONE: Stats > 2x e si trova su Vills
                if strength.Value > strengthThreshold then
                    if timerEndTime == nil then
                        -- Se il timer non è attivo, avvialo
                        timerEndTime = os.time() + TIMER_DURATION
                        TimerScreenGui.Enabled = true -- Mostra la GUI
                        print("TIMER ATTIVATO: Verrai teletrasportato sulla Terra tra " .. TIMER_DURATION .. " secondi se le condizioni rimangono invariate.")
                    end
                else
                    -- CONDIZIONE DI RESET: Le stats non sono più sufficienti
                    if timerEndTime ~= nil then
                        print("TIMER RESETTATO: Le statistiche non sono più sufficienti.")
                        timerEndTime = nil
                        TimerScreenGui.Enabled = false -- Nascondi la GUI
                    end
                end
            end
        else
            -- CONDIZIONE DI RESET: Non si trova più sul pianeta di Vills
            if timerEndTime ~= nil then
                print("TIMER RESETTATO: Hai lasciato il pianeta di Vills.")
                timerEndTime = nil
                TimerScreenGui.Enabled = false -- Nascondi la GUI
            end
        end

        -- Aggiorna il testo della GUI se il timer è attivo
        if timerEndTime ~= nil then
            local timeLeft = math.max(0, math.floor(timerEndTime - os.time()))
            TimerTextLabel.Text = "Teleport in: " .. timeLeft

            if timeLeft <= 0 then
                print("TIMER SCADUTO: Teletrasporto sulla Terra in corso...")
                local args = {[1] = "Earth"}
                game:GetService("ReplicatedStorage").Package.Events.TP:InvokeServer(unpack(args))
                timerEndTime = nil -- Resetta il timer
                TimerScreenGui.Enabled = false -- Nascondi la GUI
            end
        end
    end
end

task.spawn(RebirthTimerAndTeleport)
